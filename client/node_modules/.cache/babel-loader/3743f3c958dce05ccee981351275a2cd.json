{"ast":null,"code":"var _jsxFileName = \"/Users/dugalleix/Alyra Dev/Ropsten/DappVot/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport VotingContract from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3.js\";\nimport { addToList, removeToList } from \"./utils.js\";\nimport AdminInterface from \"./assets/components/AdminInterface.js\";\nimport VoterInterface from \"./assets/components/VoterInterface.js\";\nimport ResultVoteInterface from \"./assets/components/ResultVoteInterface.js\";\nimport Navbar from \"./assets/components/Navbar.js\";\nimport MyFooter from \"./assets/components/Footer.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      web3: null,\n      accounts: null,\n      contract: null,\n      myEvents: null,\n      isOwner: false,\n      contractSessionId: null,\n      selectedSessionId: null,\n      curState: null,\n      resultSession: null,\n      listVoters: [],\n      listProposals: [],\n      listProposalsRefused: [],\n      listVotersHasVoted: [],\n      voteResults: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = VotingContract.networks[networkId];\n        const contract = new web3.eth.Contract(VotingContract.abi, deployedNetwork && deployedNetwork.address);\n        let isOwner = false;\n        let myOwner = await contract.methods.owner().call();\n\n        if (myOwner === accounts[0]) {\n          isOwner = true;\n        }\n\n        let contractSessionId = parseInt(await contract.methods.sessionId().call(), 10);\n        let selectedSessionId = contractSessionId;\n        let currentStatus = parseInt(await contract.methods.currentStatus().call(), 10);\n        this.setState({\n          web3,\n          accounts,\n          contract,\n          isOwner,\n          contractSessionId,\n          selectedSessionId,\n          currentStatus\n        });\n        this.startFakeWebSocket();\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.reduceSelectedSession = async () => {\n      let {\n        selectedSessionId\n      } = this.state;\n\n      if (selectedSessionId > 0) {\n        selectedSessionId--;\n\n        this._updateResultSession();\n      }\n\n      this.setState({\n        selectedSessionId\n      });\n    };\n\n    this.increaseSelectedSession = async () => {\n      let {\n        selectedSessionId,\n        contractSessionId\n      } = this.state;\n\n      if (selectedSessionId < contractSessionId) {\n        selectedSessionId++;\n\n        this._updateResultSession();\n      }\n\n      this.setState({\n        selectedSessionId\n      });\n    };\n\n    this._updateResultSession = async () => {\n      let {\n        selectedSessionId,\n        contract,\n        contractSessionId,\n        resultSession\n      } = this.state;\n\n      if (selectedSessionId < contractSessionId) {\n        resultSession = await contract.methods.sessions(selectedSessionId).call();\n      } else {\n        resultSession = null;\n      }\n\n      this.setState({\n        resultSession\n      });\n      this.refresh();\n      return 1;\n    };\n\n    this.refresh = async () => {\n      let {\n        contract,\n        contractSessionId,\n        currentStatus,\n        selectedSessionId,\n        listVoters,\n        listProposals,\n        listProposalsRefused,\n        listVotersHasVoted,\n        voteResults\n      } = this.state;\n      let context = this;\n      listVoters = [];\n      listProposals = [];\n      listProposalsRefused = [];\n      listVotersHasVoted = [];\n      contract.getPastEvents('allEvents', {\n        fromBlock: 0,\n        toBlock: 'latest'\n      }, function (error, events) {}).then(function (myEvents) {\n        for (let myEvent of myEvents) {\n          if (parseInt(myEvent.returnValues.sessionId, 10) === selectedSessionId) {\n            if (myEvent.event === 'VoterRegistered') {\n              addToList(listVoters, {\n                key: myEvent.returnValues.voterAddress,\n                isAbleToPropose: myEvent.returnValues.isAbleToPropose\n              });\n            }\n\n            if (myEvent.event === 'VoterUnRegistered') {\n              removeToList(listVoters, myEvent.returnValues.voterAddress);\n            }\n\n            if (myEvent.event === 'ProposalRegistered') {\n              addToList(listProposals, {\n                key: myEvent.returnValues.owner,\n                idToSend: myEvent.returnValues.proposalId,\n                content: myEvent.returnValues.proposal\n              });\n            }\n\n            if (myEvent.event === 'ProposalUnRegistered') {\n              removeToList(listProposals, myEvent.returnValues.owner);\n              addToList(listProposalsRefused, {\n                key: myEvent.returnValues.owner,\n                idToSend: myEvent.returnValues.proposalId,\n                content: myEvent.returnValues.proposal\n              });\n            }\n\n            if (myEvent.event === 'Voted') {\n              addToList(listVotersHasVoted, {\n                key: myEvent.returnValues.voter,\n                idVoted: myEvent.returnValues.proposalId\n              });\n            }\n          }\n        }\n\n        context.setState({\n          listVoters,\n          listProposals,\n          listVotersHasVoted,\n          listProposalsRefused\n        });\n      });\n      contractSessionId = parseInt(await contract.methods.sessionId().call(), 10);\n      currentStatus = parseInt(await contract.methods.currentStatus().call(), 10);\n\n      if (currentStatus === 5 || contractSessionId !== selectedSessionId) {\n        voteResults = await contract.methods.getSessionResult(selectedSessionId).call();\n      }\n\n      this.setState({\n        contractSessionId,\n        currentStatus,\n        voteResults\n      });\n    };\n\n    this.goToNewSession = async () => {\n      let {\n        selectedSessionId\n      } = this.state;\n      selectedSessionId++;\n      this.setState({\n        selectedSessionId\n      });\n      this.refresh();\n    };\n\n    this.startFakeWebSocket = async () => {\n      setInterval(this.refresh, 1000);\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Web3, accounts, and contract...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        state: this.state,\n        reduceSelectedSession: () => this.reduceSelectedSession(),\n        increaseSelectedSession: () => this.increaseSelectedSession()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-inline-flex mt-5 p-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Bienvenue sur votre Dapps Voting !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminInterface, {\n        state: this.state,\n        goToNewSession: () => this.goToNewSession()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VoterInterface, {\n        state: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResultVoteInterface, {\n        state: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"names":["React","Component","VotingContract","getWeb3","addToList","removeToList","AdminInterface","VoterInterface","ResultVoteInterface","Navbar","MyFooter","App","state","web3","accounts","contract","myEvents","isOwner","contractSessionId","selectedSessionId","curState","resultSession","listVoters","listProposals","listProposalsRefused","listVotersHasVoted","voteResults","componentDidMount","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","myOwner","methods","owner","call","parseInt","sessionId","currentStatus","setState","startFakeWebSocket","error","alert","console","reduceSelectedSession","_updateResultSession","increaseSelectedSession","sessions","refresh","context","getPastEvents","fromBlock","toBlock","events","then","myEvent","returnValues","event","key","voterAddress","isAbleToPropose","idToSend","proposalId","content","proposal","voter","idVoted","getSessionResult","goToNewSession","setInterval","render"],"sources":["/Users/dugalleix/Alyra Dev/Ropsten/DappVot/client/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport VotingContract from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3.js\";\nimport {addToList, removeToList} from \"./utils.js\"\nimport AdminInterface from \"./assets/components/AdminInterface.js\"\nimport VoterInterface from \"./assets/components/VoterInterface.js\"\nimport ResultVoteInterface from \"./assets/components/ResultVoteInterface.js\"\nimport Navbar from \"./assets/components/Navbar.js\"\nimport MyFooter from \"./assets/components/Footer.js\"\n\nimport \"./App.css\";\n\n\nclass App extends Component {\n  state = { \n    web3: null, \n    accounts: null, \n    contract: null, \n    myEvents: null,\n    isOwner: false,\n    contractSessionId: null, \n    selectedSessionId: null,\n    curState: null,\n    resultSession: null,\n    listVoters: [],\n    listProposals: [],\n    listProposalsRefused: [],\n    listVotersHasVoted: [],\n    voteResults: null,\n  };\n\n  componentDidMount = async () => {\n\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n\n      const deployedNetwork = VotingContract.networks[networkId];\n      const contract = new web3.eth.Contract(\n        VotingContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      let isOwner = false;\n      let myOwner = await contract.methods.owner().call();\n      if(myOwner === accounts[0]){\n        isOwner = true; \n      }\n\n      let contractSessionId = parseInt(await contract.methods.sessionId().call(), 10);\n      let selectedSessionId = contractSessionId;\n      let currentStatus = parseInt(await contract.methods.currentStatus().call(), 10);\n\n      this.setState({ web3, accounts, contract, isOwner, contractSessionId, selectedSessionId, currentStatus });  \n\n      this.startFakeWebSocket();\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n  \n  /* GESTION DES SESSIONS */\n  reduceSelectedSession = async () => {\n    let { selectedSessionId } = this.state;    \n    if (selectedSessionId > 0){\n      selectedSessionId --;\n      this._updateResultSession();\n    }\n\n    this.setState({ selectedSessionId });  \n  };\n\n  increaseSelectedSession = async () => {\n    let { selectedSessionId, contractSessionId } = this.state;    \n    if (selectedSessionId < contractSessionId){\n      selectedSessionId ++;\n      this._updateResultSession();\n    }\n\n    this.setState({ selectedSessionId });  \n  };\n\n  _updateResultSession = async () => {\n    let { selectedSessionId, contract, contractSessionId, resultSession } = this.state; \n\n    if (selectedSessionId < contractSessionId) {\n      resultSession = await contract.methods.sessions(selectedSessionId).call();\n    }else{\n      resultSession = null;\n    }\n\n    this.setState({ resultSession });  \n    this.refresh();\n\n    return 1;\n  }\n  \n  /* GESTION DE L'ACTUALISATION */\n  refresh = async () => {\n    let { contract, contractSessionId, \n      currentStatus, selectedSessionId, \n      listVoters, listProposals, \n      listProposalsRefused, listVotersHasVoted, \n      voteResults } = this.state; \n\n\n    let context = this;\n\n    listVoters = [];\n    listProposals = [];\n    listProposalsRefused = []; \n    listVotersHasVoted = [];\n\n    contract.getPastEvents('allEvents', {\n      fromBlock: 0,\n      toBlock: 'latest'\n    }, function(error, events){ })\n    .then(function(myEvents){\n      for(let myEvent of myEvents){\n        if ( parseInt(myEvent.returnValues.sessionId, 10) === selectedSessionId ) {\n          if (myEvent.event === 'VoterRegistered'){\n            addToList(listVoters, \n              { \n                key: myEvent.returnValues.voterAddress, \n                isAbleToPropose: myEvent.returnValues.isAbleToPropose\n              }\n            );\n          }\n          if (myEvent.event === 'VoterUnRegistered'){\n            removeToList(listVoters, myEvent.returnValues.voterAddress);\n          }     \n          if (myEvent.event === 'ProposalRegistered'){\n            addToList(listProposals, \n              { \n                key: myEvent.returnValues.owner, \n                idToSend: myEvent.returnValues.proposalId, \n                content: myEvent.returnValues.proposal\n              }\n            );\n          }          \n          if (myEvent.event === 'ProposalUnRegistered'){\n            removeToList(listProposals, myEvent.returnValues.owner);\n            addToList(listProposalsRefused, \n              { \n                key: myEvent.returnValues.owner, \n                idToSend: myEvent.returnValues.proposalId, \n                content: myEvent.returnValues.proposal\n              }\n            );            \n          }            \n\n          if (myEvent.event === 'Voted'){\n            addToList(listVotersHasVoted, \n              { \n                key: myEvent.returnValues.voter, \n                idVoted: myEvent.returnValues.proposalId, \n              }\n            );            \n          }   \n\n        }\n      }\n      context.setState({ listVoters, listProposals, listVotersHasVoted, listProposalsRefused});  \n    });\n\n    contractSessionId = parseInt(await contract.methods.sessionId().call(), 10);\n    currentStatus = parseInt(await contract.methods.currentStatus().call(), 10);\n\n    if ((currentStatus === 5) || (contractSessionId !== selectedSessionId)) {\n      voteResults = await contract.methods.getSessionResult(selectedSessionId).call();\n    }\n\n    this.setState({ contractSessionId, currentStatus, voteResults });\n  };\n\n  goToNewSession = async () => {\n    let { selectedSessionId } = this.state; \n    selectedSessionId ++;\n    this.setState({ selectedSessionId });\n    this.refresh();\n  };\n\n  startFakeWebSocket = async () => {\n    setInterval(this.refresh, 1000);\n  };\n\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <div>Loading Web3, accounts, and contract...</div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <Navbar \n          state={this.state}\n          reduceSelectedSession={() => this.reduceSelectedSession()}\n          increaseSelectedSession={() => this.increaseSelectedSession()}\n        />\n        <div className=\"d-inline-flex mt-5 p-5\">\n          <h1>Bienvenue sur votre Dapps Voting !</h1>\n        </div>\n        <AdminInterface \n          state={this.state}\n          goToNewSession={() => this.goToNewSession()}  \n        />\n        <VoterInterface state={this.state}/>\n        <ResultVoteInterface state={this.state}/>\n        <MyFooter />\n      </div>\n    );\n  }\n};\n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}